{"version":3,"sources":["components/header/Header.jsx","components/menu/Menu.jsx","components/theme/Answer.jsx","components/theme/Theme.jsx","components/theme/Result.jsx","reducer/appReducer.js","components/theme/Preloader.jsx","components/theme/ThemeContainer.jsx","types.js","App.js","serviceWorker.js","reducer/rootreducer.js","index.js"],"names":["Header_wrapper","styled","div","Header_content","Header","page","useSelector","state","app","trivieState","useState","count","setCount","useEffect","length","id","setInterval","clearInterval","min","Math","floor","sec","secTen","secMinusTen","minTen","minMinusTen","to","style","display","Menu_style","Menu","className","marginBottom","textAlign","ListGroup","cursor","Item","Answer","props","showTrueAnswer","setshowTrueAnswer","text","AnswerStyle","onClick","counter","true","settoggle","background","opacity","toggle","order","random","Theme","setTimeout","console","log","Title","content","question","correct_answer","incorrect_answers","map","el","Results","cleanTrivia","rightAnswerCouner","initialState","Overlay","PreloaderFlex","Preloader","Spinner","width","height","animation","variant","mapDispatchToProps","fetchTrivia","theme","dispatch","a","url","fetch","response","json","type","payload","results","nextPage","cleanPage","connect","match","result","setresult","setrightAnswerCouner","params","answer","e","App","exact","path","render","component","ThemeContainer","Boolean","window","location","hostname","RootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.424e5598.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components/macro'\r\n\r\n\r\nconst Header_wrapper = styled.div`\r\nbackground-color: #20232a;\r\nwidth: 100%;\r\n\r\n`\r\nconst Header_content = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 1100px;\r\n  height: 60px;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items:center;\r\n\r\n`\r\n\r\n\r\nexport const Header = () => {\r\n  const page = useSelector(state => state.app.page)\r\n  const trivieState = useSelector(state => state.app.trivieState)\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (trivieState.length)\r\n\r\n\r\n      setCount(0)\r\n    let id = setInterval(() => {\r\n      if (trivieState.length)\r\n        setCount(count => count + 1);\r\n\r\n    }, 1000);\r\n\r\n    return () => clearInterval(id);\r\n  }, [page, trivieState]);\r\n\r\n  let min = Math.floor(count / 60)\r\n  let sec = count - (min * 60)\r\n  let secTen = Math.floor(sec / 10)\r\n  let secMinusTen = sec - (secTen * 10)\r\n  let minTen = Math.floor(min / 10)\r\n  let minMinusTen = min - (minTen * 10)\r\n \r\n\r\n  return (\r\n\r\n    <Header_wrapper>\r\n      <Header_content>\r\n        <NavLink to='/'> <div>Menu</div> </NavLink>\r\n\r\n        <div style={{ display: trivieState.length ? 'block' : 'none' }}><span >{minTen}{minMinusTen}  : </span> {secTen}{secMinusTen}</div>\r\n\r\n      </Header_content>\r\n\r\n    </Header_wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst Menu_style = styled.div`\r\nmargin-top:50px;\r\na{\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n`\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <Menu_style className='menu'>\r\n\r\n      <div className='container'>\r\n        <h2 style={{ marginBottom: '20px', textAlign: 'center' }}>Choose the Theme</h2>\r\n        <ListGroup>\r\n          <NavLink to='/theme/games' style={{marginBottom:'20px',cursor:'pointer'}} className='block'><ListGroup.Item>Games</ListGroup.Item></NavLink>\r\n          <NavLink to='/theme/televishion' style={{marginBottom:'20px',cursor:'pointer'}}>    <ListGroup.Item>Televishion</ListGroup.Item></NavLink>\r\n          <NavLink to='/theme/films' style={{marginBottom:'20px',cursor:'pointer'}} className='block'><ListGroup.Item>Films</ListGroup.Item></NavLink>\r\n          <NavLink to='/theme/music' style={{marginBottom:'20px',cursor:'pointer'}} className='block'><ListGroup.Item>Music</ListGroup.Item></NavLink>\r\n          <NavLink to='/theme/history' style={{marginBottom:'20px',cursor:'pointer'}} className='block'><ListGroup.Item>History</ListGroup.Item></NavLink>\r\n        </ListGroup>\r\n      </div>\r\n\r\n    </Menu_style>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nexport const Answer = (props) => {\r\n  const [showTrueAnswer, setshowTrueAnswer] = useState(false)\r\n\r\nuseEffect(() => {\r\n  setshowTrueAnswer(false)\r\n}, [props.text])\r\n\r\n\r\n\r\n  return (\r\n    <AnswerStyle onClick={()=> {props.counter(props.true);props.settoggle(false);setshowTrueAnswer(true)}} background={(showTrueAnswer&props.true)?'green':(showTrueAnswer&props.true===false)?'red':'white'}  opacity={`${props.toggle?1:0}`}  style={{ order: Math.floor(Math.random() * Math.floor(10)) }}>\r\n      {props.text}\r\n    </AnswerStyle>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst AnswerStyle = styled.div`\r\ncursor: pointer;\r\n  user-select:none;\r\n  margin-top:10px;\r\n  margin-bottom:10px;\r\n  padding:8px;\r\n  border: 1px solid silver;\r\n  border-radius:5px;\r\n  background-color:${props=>props.background};\r\n  opacity: ${props=>props.opacity};\r\n  transition: background-color 500ms;\r\n  transition: opacity 0ms ease 900ms;\r\n \r\n\r\n    &:hover{\r\n      box-shadow: 0 0 5px;\r\n   \r\n    }\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { Markup } from 'interweave'\r\nimport styled from 'styled-components/macro'\r\nimport { Answer } from './Answer'\r\n\r\nexport const Theme = (props) => {\r\n\r\n  const [toggle, settoggle] = useState(false)\r\n  const [showTrueAnswer, setshowTrueAnswer] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(props.page===0){\r\n      settoggle(true)\r\n    }\r\n    setTimeout(() => {\r\n      settoggle(true)\r\n    }, 100);\r\n    \r\n  }, [props.page])\r\n  \r\n  console.log(props.trivieState)\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className='container'>\r\n    \r\n\r\n\r\n        <Title  opacity={toggle?1:0}><Markup content={props.trivieState.question} /></Title>\r\n\r\n\r\n\r\n        <Answer true={true} setshowTrueAnswer={setshowTrueAnswer} showTrueAnswer={showTrueAnswer} text= {props.trivieState.correct_answer} toggle={toggle} counter={props.counter} settoggle={settoggle} ></Answer>\r\n\r\n        {props.trivieState.incorrect_answers.map(el=><Answer setshowTrueAnswer={setshowTrueAnswer} true={false} text= {el} toggle={toggle} counter={props.counter} settoggle={settoggle}/>)}\r\n        \r\n\r\n       \r\n    \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst Title = styled.div`\r\n\r\n  font-size:30px;\r\n  margin-top:50px;\r\n  margin-bottom:20px;\r\n  opacity: ${props=>props.opacity};\r\n  transition: opacity 0ms ease 900ms;\r\n\r\n\r\n`","import React, { useEffect } from 'react'\r\n\r\nexport const Results = (props) => {\r\n  useEffect(() => {\r\n    \r\n   \r\n      props.cleanTrivia()\r\n    \r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>{props.rightAnswerCouner}/5</h1>\r\n    </div>\r\n  )\r\n}\r\n","import { FETCH_TRIVIA, CLEAN_TRIVIA, NEXT_PAGE, CLEAN_PAGE } from \"../types\"\r\n\r\nconst initialState = {\r\n  trivieState: [],\r\n  page:0,\r\n}\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_TRIVIA: {\r\n      return { ...state, trivieState: action.payload }\r\n    }\r\n    case CLEAN_TRIVIA: {\r\n      return { ...state, trivieState: [] }\r\n    }\r\n    case NEXT_PAGE:{\r\n      return {...state, page:state.page+1}\r\n    }\r\n    case CLEAN_PAGE:{\r\n      return {...state, page:0}\r\n    }\r\n    default: return state\r\n  }\r\n\r\n}\r\n\r\nexport function fetchTrivia(theme) {\r\n  return async dispatch => {\r\n    let url = 0\r\n    if (theme === 'games') {\r\n      url = 15\r\n    }\r\n    if (theme === 'televishion') {\r\n      url = 14\r\n    }\r\n    if (theme === 'films') {\r\n      url = 11\r\n    }\r\n    if (theme === 'music') {\r\n      url = 12\r\n    }\r\n    if (theme === 'history') {\r\n      url = 23\r\n    }\r\n    const response = await fetch(`https://opentdb.com/api.php?amount=5&category=${url}&difficulty=easy&type=multiple`)\r\n    const json = await response.json()\r\n    dispatch({ type: FETCH_TRIVIA, payload: json.results })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport function cleanTrivia() {\r\n  return {\r\n    type: CLEAN_TRIVIA\r\n  }\r\n}\r\nexport function cleanPage() {\r\n  return {\r\n    type: CLEAN_PAGE\r\n  }\r\n}\r\n\r\n\r\nexport function nextPage() {\r\n  return {\r\n    type: NEXT_PAGE\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n\r\nbackground-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 99999999;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width:100%;\r\n  height: 100%;\r\n\r\n`\r\nconst PreloaderFlex = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nheight:100%;\r\n\r\n`\r\n\r\n\r\n\r\nexport const Preloader = () => (\r\n    <Overlay>\r\n      <PreloaderFlex>\r\n          <Spinner style={{width:'3rem',height:'3rem'}} animation=\"border\" variant=\"info\" />\r\n      </PreloaderFlex>\r\n    </Overlay>\r\n  \r\n)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Theme } from './Theme'\r\nimport {Results} from './Result'\r\nimport {fetchTrivia,cleanTrivia,nextPage,cleanPage} from '../../reducer/appReducer'\r\nimport { Preloader } from './Preloader'\r\n\r\nconst ThemeContainer = ({match,...props}) => {\r\n\r\n  const [result, setresult] = useState(false)\r\n  const [rightAnswerCouner, setrightAnswerCouner] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    props.fetchTrivia(match.params.id)\r\n    return ()=>{\r\n      props.cleanTrivia()\r\n      props.cleanPage()\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\nlet counter = (answer) => {\r\n  answer&&setrightAnswerCouner(e=>e+1)\r\n\r\n  if(props.page<4){\r\n    setTimeout(() => {\r\n      props.nextPage()\r\n    }, 500);\r\n \r\n\r\n  }\r\n  if (props.page===4){\r\n    setTimeout(() => {\r\n      setresult(true)\r\n    }, 1000);\r\n  }\r\n} \r\nif (result){\r\n  return <Results  cleanTrivia={props.cleanTrivia} rightAnswerCouner={rightAnswerCouner}/>\r\n}\r\n\r\nif (props.trivieState.length){\r\n  return  <Theme  page={props.page} counter={counter} trivieState={props.trivieState[props.page]}/>\r\n}\r\nelse {\r\n\r\n\r\n  return <Preloader/>\r\n   \r\n \r\n \r\n}\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    trivieState:state.app.trivieState,\r\n    page:state.app.page\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps ={\r\n  fetchTrivia,\r\n  cleanTrivia,\r\n  nextPage,\r\n  cleanPage\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ThemeContainer)\r\n","export const SELECT_THEME='SELECT-THEME'\r\nexport const FETCH_TRIVIA='FETCH-TRIVIA'\r\nexport const CLEAN_TRIVIA='CLEAN-TRIVIA'\r\nexport const NEXT_PAGE='NEXT-PAGE'\r\nexport const CLEAN_PAGE='CLEAN-PAGE'","import React from 'react';\nimport './App.css';\nimport { Header } from './components/header/Header';\nimport { Menu } from './components/menu/Menu';\nimport { Route, HashRouter } from 'react-router-dom';\nimport ThemeContainer from './components/theme/ThemeContainer';\n\nfunction App() {\n  return (\n    <HashRouter>\n \n    <div className=\"app\">\n        <Header/>\n      <Route exact path='/'  render= {()=> <Menu/>}/>\n      <Route exact path='/theme/:id' component={ThemeContainer}/>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nexport const RootReducer = combineReducers({\r\napp:appReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { RootReducer } from './reducer/rootreducer';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\n\nconst store = createStore(RootReducer, compose(\n  applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nReactDOM.render(\n  <Provider store={store}>\n\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}